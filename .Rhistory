separate(bagging_date,
into = c("bagging_day", "bagging_month", "bagging_year"),
sep = "/") %>%
separate(collection_date,
into = c("collection_day", "collection_month", "collection_year"),
sep = "/")
nectar_perflower <- nectar_perflower %>%
separate(habitat,
into = c("habitat_class", "habitat_specific"),
sep = "-",
extra = "merge")
nectar_perflower <- read_csv(here("potential_datasets", "AgriLand_Nectar_perflower.csv"))
nectar_perflower_cleaned <- nectar_perflower %>%
clean_names() %>%
mutate_all(tolower)
summary(nectar_perflower_cleaned)
nectar_perflower_cleaned <- nectar_perflower_cleaned %>%
separate(species,
into = c("genus", "species")) %>%
separate(bagging_date,
into = c("bagging_day", "bagging_month", "bagging_year"),
sep = "/") %>%
separate(collection_date,
into = c("collection_day", "collection_month", "collection_year"),
sep = "/")
nectar_perflower_cleaned <- nectar_perflower %>%
select(-bagging_year, -collection_year)
nectar_perflower_cleaned <- nectar_perflower_cleaned %>%
select(-bagging_year, -collection_year)
nectar_perflower_cleaned
nectar_perflower_cleaned <- nectar_perflower_cleaned %>%
separate(habitat,
into = c("habitat_class", "habitat_specific"),
sep = "-",
extra = "merge")
nectar_perflower_cleaned
names(nectar_perflower_cleaned)
nectar_perflower_cleaned %>%
count(genus, species, sort = T)
nectar_perflower_cleaned %>%
count(genus, sort = T)
nectar_perflower_cleaned %>%
count(habitat_class, sort = T)
nectar_perflower_cleaned %>%
count(genus, species, habitat_class)
nectar_perflower_cleaned %>%
count(genus, habitat_class)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland")
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
ggplot(aes(x = genus)) +
geom_bar() +
facet_wrap(~habitat_specific)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
ggplot(aes(x = genus, fill = species)) +
geom_bar() +
facet_wrap(~habitat_specific)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
filter(str_detect(genus, starts_with(c("a", "b", "c")))) %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
filter(str_detect(genus, "a"))) %>%
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific)
nectar_perflower_cleaned %>%
subset(habitat_class == "woodland") %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific) +
theme(legend.position = "none")
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
filter(genus == "acer")
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
filter(genus == "acer") %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific) +
theme(legend.position = "none")
View(nectar_perflower_cleaned)
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
filter(str_detect(fruit, "a")) %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_specific) +
theme(legend.position = "none")
filter(str_detect(fruit, "(ac)|(ae)") %>%
theme(legend.position = "none")
theme(legend.position = "none")
theme(legend.position = "none")
nectar_perflower_cleaned %>%
subset(habitat_class == "grassland") %>%
filter(str_detect(fruit, "(ac)|(ae)")
nectar_perflower_cleaned %>%
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h)) %>%
arrange(desc(mean_nectar))
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h, na.rm = T)) %>%
arrange(desc(mean_nectar))
nectar_perflower_cleaned$sugar_in_micrograms_flower_24h <-
nectar_perflower_cleaned$sugarmax_in_micrograms_flower_24h <- as.numeric(nectar_perflower_cleaned$sugarmax_in_micrograms_flower_24h)
nectar_perflower_cleaned$sugar_in_micrograms_flower_24h <- as.numeric(nectar_perflower_cleaned$sugar_in_micrograms_flower_24h)
nectar_perflower_cleaned
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h, na.rm = T)) %>%
arrange(desc(mean_nectar))
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h)) %>%
arrange(desc(mean_nectar))
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h)) %>%
arrange(desc(mean_nectar)) %>%
top_n(mean_nectar, n = 10)
nectar_perflower_cleaned %>%
filter(genus == "impatiens" |
genus == "iris"|
genus == "gladiolus"|
genus == "rubus"|
genus == "calystegia"|
genus == "rhododendron"|
genus == "symphytum"|
genus == "lathyrun"|
genus == "aesculus")
top_ten_necatr <- nectar_perflower_cleaned %>%
filter(genus == "impatiens" |
genus == "iris"|
genus == "gladiolus"|
genus == "rubus"|
genus == "calystegia"|
genus == "rhododendron"|
genus == "symphytum"|
genus == "lathyrun"|
genus == "aesculus")
nectar_perflower_cleaned %>%
ggplot(aes(x = habitat_class)) +
geom_bar() +
coord_flip()
nectar_perflower_cleaned %>%
filter(habitat_specific != "NA") %>%
ggplot(aes(x = habitat_class, fill = habitat_specific))+
geom_bar(position = "dodge") +
coord_flip()
top_ten_necatr %>%
ggplot(aes(x = genus)) +
geom_bar() +
facet_wrap(~habitat_class)
top_ten_necatr %>%
ggplot(aes(x = genus, fill = genus)) +
geom_bar() +
facet_wrap(~habitat_class)
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h, na.rm = T)) %>%
arrange(mean_nectar)
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h)) %>%
arrange(mean_nectar)
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h, na.rm = T)) %>%
arrange(mean_nectar)
setwd("~/Desktop/BIS15W2021_ang")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE) # this is to see the path for each file... helpful if you are using the here() package
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list)
names(spider_list[[3]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
View(spider_list)
spider_list$Butte
spider_list$Yolo
spiders_all <- bind_rows(spider_list)
spiders_all
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
inner_join(spiders_all, spiders_locs, by = "Accession")
spiders_with_locs_me <-
inner_join(spiders_all, spiders_locs, by = "Accession")
spiders_with_locs_me
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = "Accession")
spiders_with_locs
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
spiders_with_locs
class(spiders_with_locs$Date)
day <- today() # what is today's date?
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
mdy(dateformat2)
mdy(dateformat3)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("albersusa")
install.packages(c("boot", "broom", "cluster", "data.table", "dbplyr", "ggsignif", "insight", "MASS", "mgcv", "nlme", "rmarkdown", "xfun"))
install.packages("alberusa")
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(remotes)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22)
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
library(alberusa)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
library(remotes)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
library(remotes)
remotes::install_git("https://git.rud.is/hrbrmstr/albersusa.git")
library(alberusa)
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
library(alberusa)
library(devtools)
devtools::install_github("hrbrmstr/albersusa")
library(alberusa)
library("alberusa")
library(albersusa)
knitr::opts_chunk$set(echo = TRUE)
nectar_perflower_cleaned %>%
group_by(genus) %>%
summarise(mean_nectar = mean(sugar_in_micrograms_flower_24h, na.rm = T)) %>%
arrange(desc(mean_nectar)) %>%
top_n(mean_nectar, n = 10)
library(albersusa)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>%
clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen") # R doesn't have any built-in maps, so we have to download it!
ggmap(map1)
ggmap(map1) + # because it's based in ggplot, we can add layers!
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
spiders_map <- get_map(bbox, maptype = "toner-hybrid", source = "stamen")
ggmap(spiders_map)
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
View(spiders)
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, fill = Family) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, color = Family) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, color = spiders$Family) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, color = county) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, color = County) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, color = spiders$County) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.3, alpha = 0.5, shape = 2) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(longitude, latitude), size = 0.4, alpha = 0.5, shape = 2) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(x = longitude, y =latitude), size = 0.4, alpha = 0.5, shape = 2) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(x = longitude, y =latitude), size = 1, alpha = 0.5, shape = 2) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(x = longitude, y =latitude), size = 0.8, alpha = 0.7, shape = 2) +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(x = longitude, y =latitude), size = 0.8, alpha = 0.7, shape = 2, color = "pink") +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
ggmap(spiders_map) +
geom_point(data = spiders, aes(x = longitude, y =latitude), size = 0.8, alpha = 0.7, shape = 2, color = "pink") +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
spiders_map <- get_map(bbox, maptype = "toner-lines", source = "stamen")
ggmap(spiders_map) +
geom_point(data = spiders, aes(x = longitude, y =latitude), size = 0.8, alpha = 0.7, shape = 2, color = "pink") +
labs(x = "Longitude",
y = "Latitude",
title = "Spider Locations")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3))
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
install.packages("svglite")
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
install.packages("svglite")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
install.packages("svglite")
spiders <- spiders %>%
mutate(troglo = if_else(str_detect(locality, "Cave"), "troglo", "epig"))
spiders
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude, color = troglo, shape = troglo))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3))
library(svglite)
ggsave(filename = "map.pdf", device = "pdf", plot = uso_map, height = 5, width = 7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
